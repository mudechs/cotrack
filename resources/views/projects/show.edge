@layout('layouts.app')

@section('content')
  <div class="columns">
    <div class="column is-4-tablet">
      @component('components.card', {
        antl,
        csrf,
        locale: auth.user.locale,
        styles: 'has-background-light has-rounded-white-border',
        footer: false
      })
        @slot('header')
          <h1 class="subtitle">
            {{ project.title }}
            @if(auth.user.id == project.author_id || auth.user.is_admin || auth.user.is_superadmin)
              <a href="{{ route('projectsEdit', { id: project.id }) }}" class="button is-small is-primary is-pulled-right"><i class="fas fa-pencil-alt"></i></a>
            @endif
          </h1>
        @endslot

        @slot('content')
          <div class="tabs is-small is-centered">
            <ul>
              <li class="tab is-active" onclick="helpers.openTab(event,'infos')">
                <a>Infos</a>
              </li>
              <li class="tab" onclick="helpers.openTab(event,'members')">
                <a>Members</a>
              </li>
            </ul>
          </div>
          <div class="tab-content">
            <div id="infos" class="content-tab">
              <div class="content">
                {{{ project.descriptionHtml }}}
              </div>
              <hr>
              <table class="table is-narrow table-borderless is-fullwidth text-nowrap">
                <tbody>
                  <tr>
                    <th scope="row">Status:</th>
                    <td>
                      @if(project.is_active == 0)
                        <span class="text-danger">Inaktiv</span>
                      @else
                        <span class="text-success">Aktiv</span>
                      @endif
                    </td>
                  </tr>
                  <tr>
                    <th scope="row">ID:</th>
                    <td>{{ project.id }}</td>
                  </tr>
                  <tr>
                    <th scope="row">{{ antl.forLocale(auth.user.locale).formatMessage('static.phase') }}:</th>
                    <td>
                      @each(phase in phases)
                        @if(phase.code == project.phase)
                          {{ phase.label }}
                        @endif
                      @endeach
                    </td>
                  </tr>
                  <tr>
                    <th scope="row">Version:</th>
                    <td>{{ project.default_version }}</td>
                  </tr>
                  <tr>
                    <th>{{ antl.forLocale(auth.user.locale).formatMessage('static.autor') }}:</th>
                    <td>{{ project.projectAuthor.first_name }} {{ project.projectAuthor.last_name }}</td>
                  </tr>
                  <tr>
                    <th scope="row">{{ antl.forLocale(auth.user.locale).formatMessage('static.erstellt') }}:</th>
                    <td>{{ project.created_at }}</td>
                  </tr>
                  <tr>
                    <th scope="row">{{ antl.forLocale(auth.user.locale).formatMessage('static.geaendert') }}:</th>
                    <td>{{ project.updated_at }}</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div id="members" class="content-tab" style="display: none;">
              @each(member in project.members)
                <article id="kommentar_{{ comment.id }}" class="media">
                  <figure class="media-left">
                    <p class="image is-60x60">
                      @!component('users.components.avatar', { user: member, size: 64 })
                    </p>
                  </figure>
                  <div class="media-content">
                    <div class="content">
                      <p class="m-b-xxs">
                        <b>{{ member.first_name }} {{ member.last_name }}</b>
                        <span class="is-pulled-right">
                            @!component('users.components.availableCircle', { user: member })
                        </span>
                      </p>
                      <small>{{ member.profession }}</small>
                    </div>
                  </div>
                </article>
              @endeach
            </div>
          </div>
        @endslot
      @endcomponent
    </div>
    <div class="column is-4-tablet is-2-desktop">
      @component('components.card', {
        antl,
        csrf,
        locale: auth.user.locale,
        title: 'static.versions',
        icon: 'fas fa-code-branch',
        styles: 'has-background-light has-rounded-white-border',
        footer: false
      })
        @slot('content')
          <div class="columns">
            <div class="column">
              <form id="createVersionForm" action="{{ route('versionsCreate', { id: project.id }) }}" method="post">
                {{ csrfField() }}
                <div class="field has-addons">
                  <div class="control has-icons-right is-expanded">
                    <input type="text" id="version" class="input is-small" name="version" placeholder="Format: 0.0.0">
                  </div>
                  <p class="control">
                    <a id="createVersionButton" class="button is-primary is-small"><i class="far fa-save"></i></a>
                  </p>
                </div>
              </form>
            </div>
          </div>
          <table id="versionsTable" data-projectid="{{ project.id }}" data-version="{{ project.default_version }}" class="table is-narrow table-borderless is-fullwidth text-nowrap m-t-sm">
            <tbody>
              {{--  Projektversionen aus Ajax Call  --}}
            </tbody>
          </table>
        @endslot
      @endcomponent
    </div>
  </div>
  <div class="columns">
    <div class="column">
      @component('components.card', {
        antl,
        csrf,
        locale: auth.user.locale,
        title: 'static.tickets',
        icon: 'fas fa-ticket-alt',
        styles: 'has-background-light has-rounded-white-border',
        footer: false
      })
        @slot('content')
          <div class="tabs is-small is-centered">
            <ul>
              <li class="tab is-active" onclick="helpers.openTab(event,'open')">
                <a>{{ antl.forLocale(auth.user.locale).formatMessage('static.offene_tickets') }}</a>
              </li>
              <li class="tab" onclick="helpers.openTab(event,'closed')">
                <a>{{ antl.forLocale(auth.user.locale).formatMessage('static.geschlossene_tickets') }}</a>
              </li>
            </ul>
          </div>
          <div class="tab-content">
            <div id="open" class="content-tab">
              @!component('projects.components.ticketListing', {
                priority: antl.forLocale(auth.user.locale).formatMessage('static.prioritaet'),
                subject: antl.forLocale(auth.user.locale).formatMessage('static.betreff'),
                from: antl.forLocale(auth.user.locale).formatMessage('static.von'),
                to: antl.forLocale(auth.user.locale).formatMessage('static.an'),
                dateLabel: antl.forLocale(auth.user.locale).formatMessage('static.erstellt'),
                tickets: ticketsOpen,
                dataTableHandler: 'data-table-open',
                priorities,
                statuses
              })
            </div>
            <div id="closed" class="content-tab" style="display: none;">
              @!component('projects.components.ticketListing', {
                priority: antl.forLocale(auth.user.locale).formatMessage('static.prioritaet'),
                subject: antl.forLocale(auth.user.locale).formatMessage('static.betreff'),
                from: antl.forLocale(auth.user.locale).formatMessage('static.von'),
                to: antl.forLocale(auth.user.locale).formatMessage('static.an'),
                dateLabel: antl.forLocale(auth.user.locale).formatMessage('static.abgeschlossen'),
                tickets: ticketsClosed,
                dataTableHandler: 'data-table-closed',
                priorities,
                statuses
              })
            </div>
          </div>
        @endslot
      @endcomponent
    </div>
  </div>
  @if(auth.user.is_admin || auth.user.is_superadmin)
    <div class="text-nowrap" style="overflow-x: auto;">
      <b>Token: </b><code>{{{ project.token }}}</code>
    </div>
  @endif
@endsection

@section('js')
  <script>
    document.addEventListener('DOMContentLoaded', function(event) {
      helpers.dataTable('.data-table-open', 2, 'desc');
      helpers.dataTable('.data-table-closed', 2, 'desc');
    })
  </script>

  @if(auth.user.id == project.author_id || auth.user.is_admin || auth.user.is_superadmin)
    <script>
      document.addEventListener('DOMContentLoaded', function(event) {
        getVersions();
      });

      // Erstelle eine neue Version
      document.getElementById('createVersionButton').addEventListener('click', function(event) {
        event.preventDefault();

        const formData = document.getElementById('createVersionForm');
        const data = helpers.formSerialize(formData);
        const url = formData.getAttribute('action');

        console.log(data.version);

        const validate = helpers.validateRegex(data.version, '^[0-9]+\.+[0-9]+\.+[0-9]$');
        if(validate) {
          axios.post(url, {
            data: data
          })
          .then(function (response) {
            document.getElementById('version').value = '';
            helpers.showToast();
            getVersions();
          })
          .catch(function (error) {
            console.log(error);
          })
        } else {
          alert('Not valid');
        }
      });

      // Lade die Versionen, l√∂sche Versionen
      function getVersions() {
        const table = document.getElementById('versionsTable');
        const projectId = table.dataset.projectid;
        const defaultVersion = table.dataset.version;
        const url = '/api/versions/' + projectId;

        table.innerHTML = '';

        axios.get(url)
        .then(function (response) {
          const elements = response.data;
          let row, cell1, cell2, cell3, disabled, color;

          elements.forEach(element => {
            row = table.insertRow(0);
            cell1 = row.insertCell(0);
            cell2 = row.insertCell(1);
            cell3 = row.insertCell(2);

            if(element.title == defaultVersion) {
              disabled = 'disabled';
              color = 'has-text-success';
            } else {
              disabled = '';
              color = '';
            }

            cell1.innerHTML = '<b class="' + color + '">' + element.title + '</b>';
            cell2.innerHTML = element.created_at;
            cell3.innerHTML = '<button class="version-delete-handler button is-small is-text is-pulled-right" data-id="' + element.id + '" ' + disabled + '><i class="far fa-times-circle has-text-danger"></i></button>';

            // L√∂sche eine Version die nicht default ist
            if(document.querySelectorAll('.version-delete-handler')) {
              const elements = document.querySelectorAll('.version-delete-handler')
              elements.forEach(element => {
                element.addEventListener('click', (event) => {
                  event.preventDefault();

                  const versionId = element.dataset.id;
                  const url = '/api/versions/delete/' + versionId;
                  axios.post(url)
                    .then(function(response) {
                      helpers.showToast();
                      getVersions();
                    })
                    .catch(function (error) {
                      console.log(error);
                    })
                })
              })
            }
          })
        })
        .catch(function (error) {
          console.log(error);
        })
      }
    </script>
  @endif
@endsection